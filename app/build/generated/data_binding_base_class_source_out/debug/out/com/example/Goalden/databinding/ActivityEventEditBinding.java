// Generated by view binder compiler. Do not edit!
package com.example.Goalden.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Goalden.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventEditBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText activityName;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final TextView dateTV;

  @NonNull
  public final Spinner mySpinner;

  @NonNull
  public final Button timeButton;

  private ActivityEventEditBinding(@NonNull LinearLayout rootView, @NonNull EditText activityName,
      @NonNull Button datePickerButton, @NonNull TextView dateTV, @NonNull Spinner mySpinner,
      @NonNull Button timeButton) {
    this.rootView = rootView;
    this.activityName = activityName;
    this.datePickerButton = datePickerButton;
    this.dateTV = dateTV;
    this.mySpinner = mySpinner;
    this.timeButton = timeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activityName;
      EditText activityName = ViewBindings.findChildViewById(rootView, id);
      if (activityName == null) {
        break missingId;
      }

      id = R.id.datePickerButton;
      Button datePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.dateTV;
      TextView dateTV = ViewBindings.findChildViewById(rootView, id);
      if (dateTV == null) {
        break missingId;
      }

      id = R.id.my_spinner;
      Spinner mySpinner = ViewBindings.findChildViewById(rootView, id);
      if (mySpinner == null) {
        break missingId;
      }

      id = R.id.timeButton;
      Button timeButton = ViewBindings.findChildViewById(rootView, id);
      if (timeButton == null) {
        break missingId;
      }

      return new ActivityEventEditBinding((LinearLayout) rootView, activityName, datePickerButton,
          dateTV, mySpinner, timeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
